@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;
@using MoneyMate.Models;
@using MoneyMate.Helpers;


<div class="w-full space-y-6 self-start">
    <Form Model="@IncomeTransaction"
          OnFinish="OnFinish"
          OnFinishFailed="OnFinishFailed"
          LabelColSpan="8"
          WrapperColSpan="16">

        <div class="space-y-4">
            <!-- Title Input -->
            <FormItem Label="Title">
                <Input required @bind-Value="@IncomeTransaction.title" class="w-full rounded-md border border-gray-300 p-3 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
            </FormItem>

            <!-- Amount Input -->
            <FormItem Label="Amount">
                <Input required Type="number" @bind-Value="@IncomeTransaction.amount" class="w-full rounded-md border border-gray-300 p-3 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
            </FormItem>

            <!-- Tag Dropdown -->
            <FormItem Label="Tag">
                <Select @bind-Value="@IncomeTransaction.transactionTagId" OnChange="onTagChanged" TItem="string" TItemValue="string" class="w-full rounded-md border border-gray-300 p-3 focus:outline-none focus:ring-2 focus:ring-indigo-500">
                    <SelectOptions>
                        @foreach (var tag in tags)
                        {
                            <SelectOption TItem="string" TItemValue="string" Value="@tag.tagId" Label="@tag.tagName" />
                        }
                    </SelectOptions>
                </Select>
            </FormItem>

            <!-- Date Picker -->
            <FormItem Label="Date">
                <DatePicker @bind-Value="@IncomeTransaction.transactionDate" class="w-full rounded-md border border-gray-300 p-3 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
            </FormItem>

            <!-- Note Input -->
            <FormItem Label="Note">
                <Input @bind-Value="@IncomeTransaction.note" />
            </FormItem>

            <!-- Submit Button -->
            <FormItem WrapperColOffset="8" WrapperColSpan="16">
             <Button Color="Color.Green8" Type="primary" Class="w-full">
                    Add Income
                </Button>
            </FormItem>
        </div>
    </Form>
</div>

@code {
    [Parameter]
    public bool isModalOpened { get; set; }

   

    private List<TagsModel> tags = new List<TagsModel>();

    protected override async Task OnInitializedAsync()
    {
        tags = await TagsHelper.InitializeOrGetTags();
    }
    

    private TransactionModel IncomeTransaction = new TransactionModel
        {
            transactionId = Guid.NewGuid().ToString(),
            transactionDate = DateTime.Now,
            transactionType = TransactionType.Income
        };

    private void onTagChanged(string transactionId)
    {
     
        IncomeTransaction.transactionId = transactionId;
    }

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success: {JsonSerializer.Serialize(IncomeTransaction)}");
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed: {JsonSerializer.Serialize(IncomeTransaction)}");
    }

    protected override void OnParametersSet()
    {
       
        if (isModalOpened)
        {
            ResetForm();
        }
    }

    private void ResetForm()
    {
        IncomeTransaction = new TransactionModel
            {
                transactionId = Guid.NewGuid().ToString(),
                transactionDate = DateTime.Now,
                transactionType = TransactionType.Income
            };
    }
}


