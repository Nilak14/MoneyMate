@using MoneyMate.Models
@using MoneyMate.Helpers
@inject GlobalState GlobalState
<Card Class="!rounded-lg !shadow-lg">
    <h2 class="text-xl font-bold md:text-2xl"><FormatNumber amount="@total"/></h2>
    <p class="text-base font-semibold">@content</p>
</Card>

@code {
    [Parameter]
    public  TransactionType TransactionType { get; set; }

    [Parameter]
    public required string content { get; set; }

    [Parameter]
    public required Boolean isBalance { get; set; }

    private List<TransactionModel> allTransaction;
    private decimal total;

    protected override void OnInitialized()
    {
        allTransaction = TransactionHelper.GetAllTransactions();
        decimal expenses = allTransaction
              .Where(t => t.transactionType == TransactionType.Expense)
              .Sum(t => t.amount);
        GlobalState.setGlobalTotalExpenses(expenses);

        if(!isBalance){
            total = allTransaction.Where(t => t.transactionType == TransactionType).Sum(t => t.amount);
        }
        else
        {
            decimal income = allTransaction
              .Where(t => t.transactionType == TransactionType.Income)
              .Sum(t => t.amount);

          

            decimal debt = allTransaction
                .Where(t => t.transactionType == TransactionType.Debt)
                .Sum(t => t.amount);

            total = (income + debt) - expenses;
        }


    }

    
}
